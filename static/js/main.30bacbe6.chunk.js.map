{"version":3,"sources":["assets sync /^/.*$","assets/image/SVG/arrow-down.svg","assets/image/SVG/check.svg","assets/image/SVG/close.svg","assets/image/SVG/hourglass-1.svg","assets/image/SVG/hourglass-2.svg","assets/image/SVG/hourglass-3.svg","assets/image/SVG/hourglass-o.svg","components/UI/SelectInput/Options/Option/Option.js","components/UI/SelectInput/Options/Options.js","components/UI/SelectInput/SelectInput.js","components/UI/Button/Button.js","containers/StartQuiz/StartQuiz.js","components/Timer/Timer.js","components/UI/RadioButton/RadioButton.js","components/SuccessCheck/SuccessCheck.js","components/Question/Question.js","components/ProgressBar/ProgressBar.js","components/UserScore/UserScore.js","components/Loader/Loader.js","containers/Quiz/Quiz.js","components/UI/Backdrop/Backdrop.js","components/Modal/Modal.js","components/Title/Char/Char.js","components/Title/Title.js","components/Intro/Intro.js","App.js","serviceWorker.js","index.js","components/UI/SelectInput/SelectInput.module.scss","components/Timer/Timer.module.scss","components/UI/RadioButton/RadioButton.module.scss","components/Modal/Modal.module.scss","components/ProgressBar/ProgressBar.module.scss","components/Intro/Intro.module.scss","containers/StartQuiz/StartQuiz.module.scss","components/Title/Char/Char.module.scss","assets/image/sprite.svg","App.module.scss","components/UI/SelectInput/Options/Options.module.scss","components/UI/SelectInput/Options/Option/Option.module.scss","components/UI/Button/Button.module.scss","containers/Quiz/Quiz.module.scss","components/SuccessCheck/SuccessCheck.module.scss","components/UserScore/UserScore.module.scss","components/Question/Question.module.scss","components/Loader/Loader.module.scss","components/UI/Backdrop/Backdrop.module.scss","components/Title/Title.module.scss"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Option","props","className","classes","onClick","onOptionSelected","value","Options","optionSelectedHandler","selectedOption","style","options","show","length","overflowY","height","SelectOptions","ref","optionsRef","option","key","SelectInput","useState","showOptions","setShowOptions","itemList","selected","setSelected","useRef","buttonRef","handleClickOutside","useCallback","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","classList","SelectInput__OptionsShown","SelectInputWrapper","valueSelected","label","join","Button","clicked","disabled","children","StartQuiz","difficulty","category","formControls","setFormControls","triviaCategories","require","formContent","formCtrl","inputName","copiedFormControls","copiedFormControl","onValueSelectedHandler","StartQuiz__Form","onSubmit","preventDefault","categoryId","selectedCategory","baseUrl","chosenDifficulty","chosenCatagory","trivia_categories","find","name","toLowerCase","quizStarted","Timer","icon","time","Blinking","Timer__Icon","xlinkHref","svg","Timer__Text","RadioButton","radioRef","checked","RadioGroup","type","RadioButton__Input","htmlFor","RadioButton__Label","SuccessCheck","defaultOptions","loop","autoplay","animationData","isSuccess","rendererSettings","preserveAspectRatio","window","innerWidth","width","Question","selectedChoice","setSelectedChoice","countDown","setCountDown","timer","setInterval","clearInterval","questionNumber","timeIsUp","header","text","Question__Joker","jokerUsed","canUseJoker","Question__Number","Question__Text","questionText","Question__Choices","questionChoices","choice","index","onChoiceMarkedHandler","answered","success","ButtonText","ButtonText__Icon","ProgressBar","progress","borderTopRightRadius","borderBottomRightRadius","ProgressBar__Background","ProgressBar__Foreground","UserScore","score","Loader","Quiz","timeout","isLoading","setIsLoader","quizData","setQuizData","currQuestion","setCurrQuestion","answerCorrect","setAnswerCorrect","setSuccess","setAnswered","userJoker","setUserJoker","userScore","setUserScore","loadingTimeout","fetchData","apiUrl","axios","get","then","result","questions","data","results","q","question","he","decode","correct_answer","choices","shuffleArray","incorrect_answers","a","concat","setTimeout","catch","error","console","log","clearTimeout","onGameOver","newData","gameOver","array","newArr","i","j","Math","floor","random","pageContent","isCorrect","Backdrop","ReactDOM","createPortal","getElementById","Modal","ModalContainer","modalClasses","setModalClasses","closeModalHandler","closed","ModalContainer__Closed","ModalClose","ModalContent","ModalContent__Header","ModalContent__Text","ModalContent__Text__Icon","ModalContent__Score","Char","transform","number","letter","Title","React","memo","title","split","Intro","Intro__Text","Intro__Icon","App","setApiUrl","setQuizStarted","modalConfig","setModalConfig","url","Boolean","location","hostname","match","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30bacbe6.chunk.js","sourcesContent":["var map = {\n\t\"./failure_cross\": 70,\n\t\"./failure_cross.json\": 70,\n\t\"./image/SVG/arrow-down.svg\": 163,\n\t\"./image/SVG/check.svg\": 164,\n\t\"./image/SVG/close.svg\": 165,\n\t\"./image/SVG/hourglass-1.svg\": 166,\n\t\"./image/SVG/hourglass-2.svg\": 167,\n\t\"./image/SVG/hourglass-3.svg\": 168,\n\t\"./image/SVG/hourglass-o.svg\": 169,\n\t\"./image/sprite.svg\": 5,\n\t\"./loading_anim\": 30,\n\t\"./loading_anim.json\": 30,\n\t\"./success_check\": 71,\n\t\"./success_check.json\": 71,\n\t\"./triviaCategories\": 34,\n\t\"./triviaCategories.json\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 162;","module.exports = __webpack_public_path__ + \"static/media/arrow-down.b31b1aee.svg\";","module.exports = __webpack_public_path__ + \"static/media/check.21b6743e.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.017fbe80.svg\";","module.exports = __webpack_public_path__ + \"static/media/hourglass-1.ceb1eae4.svg\";","module.exports = __webpack_public_path__ + \"static/media/hourglass-2.76614856.svg\";","module.exports = __webpack_public_path__ + \"static/media/hourglass-3.e33852fa.svg\";","module.exports = __webpack_public_path__ + \"static/media/hourglass-o.03f40d3a.svg\";","import React from 'react';\r\n\r\nimport classes from './Option.module.scss';\r\n\r\nconst Option = (props) => {\r\n\r\n    const optionSelected = () => {\r\n        props.onOptionSelected(props.value)\r\n    }\r\n\r\n    return (\r\n        <li className={classes.Option} onClick={optionSelected}>\r\n            {props.value}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Option;","import React from 'react';\r\n\r\nimport classes from './Options.module.scss';\r\nimport Option from './Option/Option';\r\n\r\nconst Options = (props) => {\r\n    const optionSelectedHandler = (value) => {\r\n        props.selectedOption(value);\r\n    }\r\n\r\n    let style = {};\r\n    let options = null;\r\n    if(props.show) {\r\n        if(props.options.length > 5) {\r\n            style = {\r\n                overflowY: 'scroll',\r\n                height: '14rem'\r\n            };\r\n        }\r\n\r\n        options = (\r\n            <ul className={classes.SelectOptions} style={style} ref={props.optionsRef}>\r\n                {props.options.map(option => {\r\n                    return <Option key={option} value={option} onOptionSelected={optionSelectedHandler}></Option>\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        options\r\n    )\r\n}\r\n\r\nexport default Options;","import React, { useState, useRef, useEffect, useCallback } from 'react';\r\n\r\nimport classes from './SelectInput.module.scss';\r\nimport Options from './Options/Options';\r\n\r\nconst SelectInput = (props) => {\r\n    const [showOptions, setShowOptions] = useState(false);\r\n    const [selected, setSelected] = useState(props.itemList[0]);\r\n\r\n    let optionsRef = useRef(null);\r\n    let buttonRef = useRef(null);\r\n\r\n    const handleClickOutside = useCallback(\r\n        (event) => {\r\n            if((optionsRef.current && buttonRef.current.contains(event.target))) {\r\n                return;\r\n            }\r\n\r\n            if(!(optionsRef.current && optionsRef.current.contains(event.target))) {\r\n                if(showOptions) {\r\n                    setShowOptions(showOptions => !showOptions);\r\n                }\r\n            }\r\n        },\r\n        [showOptions],\r\n    );\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n        \r\n    }, [showOptions, handleClickOutside]);\r\n\r\n    const onSelectInputClickedHandler = () => {\r\n        setShowOptions(showOptions => !showOptions);\r\n    }\r\n\r\n    const onSelectOptionHandler = (value) => {\r\n        setSelected(value);\r\n        setShowOptions(showOptions => !showOptions);\r\n        props.valueSelected(value);\r\n    }\r\n    \r\n    let classList = [classes.SelectInput];\r\n    if(showOptions) {\r\n        classList = [classes.SelectInput, classes.SelectInput__OptionsShown];\r\n    }\r\n    else {\r\n        classList = [classes.SelectInput];\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.SelectInputWrapper}>\r\n                <Options show={showOptions} options={props.itemList} selectedOption={onSelectOptionHandler} optionsRef={optionsRef} />\r\n                <label>{props.label}</label>\r\n                <div className={classList.join(' ')} onClick={onSelectInputClickedHandler} ref={buttonRef}>{selected}</div>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default SelectInput;","import React from 'react';\r\n\r\nimport classes from './Button.module.scss';\r\n\r\nconst Button = (props) => {\r\n    return (\r\n        <button className={classes.Button} onClick={props.clicked} disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, { useState } from 'react';\r\n\r\nimport classes from './StartQuiz.module.scss';\r\nimport SelectInput from '../../components/UI/SelectInput/SelectInput';\r\nimport Button from '../../components/UI/Button/Button';\r\n\r\nconst StartQuiz = (props) => {\r\n    const [formControls, setFormControls] = useState({\r\n        difficulty: {\r\n            label: \"Difficulty\",\r\n            options: ['Any Difficulty', 'Easy', 'Medium', 'Hard'],\r\n            value: 'Any Difficulty'\r\n        },\r\n        category: {\r\n            label: \"Category\",\r\n            options: [\r\n                'Any Category', 'General Knowledge', 'Entertainment: Books', 'Entertainment: Film',\r\n                'Entertainment: Music', 'Entertainment: Television', 'Entertainment: Video Games',\r\n                'Entertainment: Board Games', 'Science & Nature', 'Science: Computers', 'Science: Mathematics',\r\n                'Mythology', 'Sports', 'Geography', 'History', 'Politics', 'Art', 'Celebrities', 'Animals',\r\n                'Vehicles', 'Entertainment: Comics', 'Science: Gadgets'\r\n            ],\r\n            value: 'Any Category'\r\n        }\r\n    });\r\n    \r\n    let triviaCategories = require('../../assets/triviaCategories.json');\r\n\r\n    const obtainCategoryId = (selectedCategory) => {\r\n        let category = triviaCategories.trivia_categories.find(category => category.name ===selectedCategory);\r\n\r\n        return category.id;\r\n    }\r\n\r\n    const onValueSelectedHandler = (inputName, value) => {\r\n        // Deep copy the state\r\n        const copiedFormControls = {...formControls};\r\n\r\n        const copiedFormControl = {...copiedFormControls[inputName]};\r\n\r\n        copiedFormControl.value = value;\r\n\r\n        copiedFormControls[inputName] = copiedFormControl;\r\n\r\n        setFormControls(formControls => copiedFormControls);\r\n    }\r\n\r\n    const onStartFormSubmitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        let baseUrl = 'https://opentdb.com/api.php?amount=10&type=multiple';\r\n\r\n        let chosenDifficulty = formControls.difficulty.value;\r\n        let chosenCatagory = formControls.category.value;\r\n        let categoryId;\r\n\r\n        if(chosenCatagory !== 'Any Category') {\r\n            // Get the id of the chosen category\r\n            categoryId = obtainCategoryId(chosenCatagory);\r\n        }\r\n\r\n        if(categoryId) {\r\n            baseUrl += '&category=' + categoryId;\r\n        }\r\n\r\n        if(chosenDifficulty !== 'Any Difficulty') {\r\n            baseUrl += '&difficulty=' + chosenDifficulty.toLowerCase();\r\n        }\r\n\r\n        props.quizStarted(baseUrl);\r\n    }\r\n\r\n    // const resetFields = () => {\r\n\r\n    // }\r\n\r\n    let formContent = Object.keys(formControls).map(formCtrl => {\r\n        return <SelectInput\r\n            key={formCtrl}\r\n            label={formControls[formCtrl].label}\r\n            itemList={formControls[formCtrl].options}\r\n            valueSelected={(value) => onValueSelectedHandler(formCtrl, value)} \r\n        />\r\n    });\r\n\r\n    return (\r\n        <section className={classes.StartQuiz}>\r\n            <form className={classes.StartQuiz__Form} onSubmit={onStartFormSubmitHandler}>\r\n                {formContent}\r\n\r\n                <Button>Start</Button>\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default StartQuiz;","import React from 'react';\r\n\r\nimport svg from '../../assets/image/sprite.svg';\r\nimport classes from './Timer.module.scss';\r\n\r\nconst Timer = (props) => {\r\n    let classList = [classes.Timer];\r\n\r\n    let icon = 'icon-hourglass-1';\r\n    if(props.time <= 10 && props.time >= 5) {\r\n        icon = 'icon-hourglass-2';\r\n    }\r\n    else if(props.time < 5) {\r\n        icon = 'icon-hourglass-3';\r\n        classList = [classes.Timer, classes.Blinking];\r\n    }\r\n\r\n    return (\r\n        <div className={classList.join(' ')}>\r\n            <svg className={classes.Timer__Icon}>\r\n                <use xlinkHref={`${svg}#${icon}`}></use>\r\n            </svg>\r\n            <span className={classes.Timer__Text}>\r\n                Time Left: {props.time}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer;","import React, { useRef, useEffect } from 'react';\r\n\r\nimport classes from './RadioButton.module.scss';\r\n\r\nconst RadioButton = (props) => {\r\n    let radioRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        radioRef.current.checked = false;\r\n    }, [props.label]);\r\n\r\n    return (\r\n        <div className={classes.RadioGroup}>\r\n            <input type=\"radio\" className={classes.RadioButton__Input} id={props.id} name={props.name} ref={radioRef} />\r\n            <label htmlFor={props.id} className={classes.RadioButton__Label} onClick={props.selected}>\r\n                <span className={classes.RadioButton}></span>\r\n                <span>{props.label}</span>\r\n            </label>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RadioButton;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport classes from './SuccessCheck.module.scss';\r\n\r\nconst SuccessCheck = (props) => {\r\n\r\n    let animationData = require(`../../assets/${ props.isSuccess ? 'success_check.json' : 'failure_cross.json' }`);\r\n\r\n    const defaultOptions = {\r\n        loop: false,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.SuccessCheck}>\r\n            <Lottie \r\n                options={defaultOptions}\r\n                height={window.innerWidth > 800 ? 150 : 100}\r\n                width={window.innerWidth > 800 ? 150 : 100}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SuccessCheck;","import React, { useState, useEffect, useRef } from 'react';\r\n\r\nimport svg from '../../assets/image/sprite.svg';\r\nimport classes from './Question.module.scss';\r\nimport Timer from '../Timer/Timer';\r\nimport RadioButton from '../UI/RadioButton/RadioButton';\r\nimport Button from '../UI/Button/Button';\r\nimport SuccessCheck from '../SuccessCheck/SuccessCheck';\r\n\r\nconst Question = (props) => {\r\n    const [selectedChoice, setSelectedChoice] = useState(null);\r\n    const [countDown, setCountDown] = useState(15);\r\n\r\n    let timer = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setSelectedChoice(null);\r\n\r\n        setCountDown(15);\r\n\r\n        timer.current = setInterval(() => {\r\n            setCountDown(countDown => countDown - 1);\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(timer.current);\r\n        }\r\n    }, [props.questionNumber]);\r\n\r\n    const answerSelected = () => {\r\n        props.selected(props.questionNumber, selectedChoice, countDown);\r\n        setSelectedChoice(null);\r\n\r\n        clearInterval(timer.current);\r\n    }\r\n\r\n    const onChoiceMarkedHandler = (index) => {\r\n        setSelectedChoice(props.questionChoices[index]);\r\n    }\r\n\r\n    const onJokerUsed = () => {\r\n        props.jokerUsed(props.questionNumber - 1);\r\n    }\r\n\r\n    if(countDown <= 0) {\r\n        let gameOverData = {\r\n            header: 'Game Over',\r\n            text: 'Your time ran out!',\r\n            icon: 'hourglass-o'\r\n        }\r\n        props.timeIsUp(gameOverData);\r\n\r\n        clearInterval(timer.current);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.Question}>\r\n                <div className={classes.Question__Joker}>\r\n                    <Button clicked={onJokerUsed} disabled={!props.canUseJoker}>50:50</Button>\r\n                </div>\r\n\r\n                <Timer time={countDown} />\r\n\r\n                <span className={classes.Question__Number}>{`Q${props.questionNumber}`}</span>\r\n                <div className={classes.Question__Text}>\r\n                    {props.questionText}\r\n                </div>\r\n\r\n                <div className={classes.Question__Choices}>\r\n                    {props.questionChoices.map((choice, index) => {\r\n                        return <RadioButton \r\n                            key={`choice${index}`}\r\n                            id={`choice${index}`}\r\n                            label={choice}\r\n                            name={`question${props.questionNumber}`}\r\n                            selected={() => onChoiceMarkedHandler(index)}\r\n                        />\r\n                    })}\r\n                </div>\r\n                \r\n                {props.answered ? <SuccessCheck isSuccess={props.success} /> : null}\r\n                <Button clicked={answerSelected} disabled={!selectedChoice}>\r\n                    <span className={classes.ButtonText}>\r\n                        <svg className={classes.ButtonText__Icon}>\r\n                            <use xlinkHref={`${svg}#icon-check`}></use>\r\n                        </svg>\r\n                        <span>\r\n                            Select\r\n                        </span>\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Question;","import React from 'react';\r\n\r\nimport classes from './ProgressBar.module.scss';\r\n\r\nconst ProgressBar = (props) => {\r\n\r\n    let progress = {\r\n        width: `${props.questionNumber * 10}%`,\r\n        borderTopRightRadius: props.questionNumber === 10 ? '5px' : '0px',\r\n        borderBottomRightRadius: props.questionNumber === 10 ? '5px' : '0px'\r\n    };\r\n\r\n    return (\r\n        <div className={classes.ProgressBar}>\r\n            <div className={classes.ProgressBar__Background}></div>\r\n            <div className={classes.ProgressBar__Foreground} style={progress}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;","import React from 'react';\r\n\r\nimport classes from './UserScore.module.scss';\r\n\r\nconst UserScore = (props) => {\r\n    return (\r\n        <span className={classes.UserScore}>\r\n            {`Score: ${props.score}`}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default UserScore;","import React from 'react';\r\nimport Lottie from 'react-lottie';\r\n\r\nimport animationData from '../../assets/loading_anim.json';\r\nimport classes from './Loader.module.scss';\r\n\r\nconst Loader = (props) => {\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true, \r\n        animationData: animationData,\r\n        rendererSettings: {\r\n            preserveAspectRatio: 'xMidYMid slice'\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={classes.Loader}>\r\n            <Lottie \r\n                options={defaultOptions}\r\n                height={window.innerWidth > 800 ? 400 : 200}\r\n                width={window.innerWidth > 800 ? 400 : 200}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader;","import React, { useState, useCallback, useEffect, useRef } from 'react';\r\nimport he from 'he'; // To decode html entities\r\nimport axios from 'axios';\r\n\r\nimport classes from './Quiz.module.scss';\r\nimport Question from '../../components/Question/Question';\r\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\r\nimport UserScore from '../../components/UserScore/UserScore';\r\nimport Loader from '../../components/Loader/Loader';\r\n\r\nconst Quiz = (props) => {\r\n    const [isLoading, setIsLoader] = useState(true);\r\n    const [quizData, setQuizData] = useState([]);\r\n    const [currQuestion, setCurrQuestion] = useState(0);\r\n    const [answerCorrect, setAnswerCorrect] = useState(true);\r\n    const [success, setSuccess] = useState(false);\r\n    const [answered, setAnswered] = useState(false);\r\n    const [userJoker, setUserJoker] = useState(1);\r\n    const [userScore, setUserScore] = useState(0);\r\n\r\n    let timeout;\r\n    let loadingTimeout = useRef();\r\n\r\n    const fetchData = useCallback(\r\n        () => {\r\n            setIsLoader(true);\r\n            props.apiUrl && axios.get(props.apiUrl).then(result => {\r\n                let questions = result.data.results.map(q => {\r\n                    return {\r\n                        ...q,\r\n                        question: he.decode(q.question),\r\n                        correct_answer: he.decode(q.correct_answer),\r\n                        choices: shuffleArray(q.incorrect_answers.map(a => he.decode(a)).concat(he.decode(q.correct_answer)))\r\n                    }\r\n                });\r\n\r\n                setQuizData(questions);\r\n                loadingTimeout.current = setTimeout(() => {\r\n                    setIsLoader(false);\r\n                }, 2000); \r\n            }).catch(error => {\r\n                console.log(error);\r\n            });\r\n        },\r\n        [props.apiUrl]\r\n    );\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n\r\n        return () => {\r\n            clearTimeout(timeout);\r\n            clearTimeout(loadingTimeout.current);\r\n        }\r\n    }, [fetchData, timeout]);\r\n\r\n    const onSelectedHandler = (questionNumber, selected, time) => {\r\n        let isCorrect = answerCorrect && quizData[questionNumber - 1].correct_answer === selected;\r\n        \r\n        setAnswered(true);\r\n\r\n        // Check if the answer is correct\r\n        setAnswerCorrect(answerCorrect => isCorrect);\r\n\r\n        if(!isCorrect) {\r\n            timeout = setTimeout(() => {\r\n                let gameOverData = {\r\n                    header: 'Game Over',\r\n                    text: 'You didn\\'t manage to answer all the questions correctly!',\r\n                    icon: 'close',\r\n                    score: userScore\r\n                }\r\n                // setAnswered(false);\r\n                onGameOver(gameOverData);\r\n                \r\n            }, 2000);\r\n        }\r\n        else {\r\n            setUserScore(userScore => userScore + time);\r\n\r\n            // Check if there are any questions left\r\n            if(!(currQuestion < quizData.length - 1)) {\r\n                setSuccess(true);\r\n                timeout = setTimeout(() => {\r\n                    let gameOverData = {\r\n                        header: 'Congratulations!',\r\n                        text: 'You managed to answer all the questions correctly!',\r\n                        icon: 'check',\r\n                        score: userScore + time // Async nature: Score sent to modal not updated\r\n                    }\r\n                    onGameOver(gameOverData);\r\n                }, 2000);\r\n            }\r\n            else {\r\n                setSuccess(true);\r\n                timeout = setTimeout(() => {\r\n                    if(currQuestion < quizData.length - 1) {\r\n                        setCurrQuestion(currQuestion => currQuestion + 1);\r\n                    }\r\n                    setSuccess(false);\r\n                    setAnswered(false);\r\n                }, 2000);\r\n            }\r\n        }\r\n    }\r\n\r\n    const onJokerUsedHandler = (index) => {\r\n        if(!(userJoker > 0)) {\r\n            return;\r\n        }\r\n\r\n        setQuizData(quizData => {\r\n            return quizData.map((question, i) => {\r\n                if(index !== i) {\r\n                    return question\r\n                }\r\n                else {\r\n                    return {\r\n                        ...question,\r\n                        choices: [question.incorrect_answers[Math.floor(Math.random(0, 1) * 3)]].concat(question.correct_answer)\r\n                    }\r\n                }\r\n            })\r\n        });\r\n\r\n        setUserJoker(0);\r\n    }\r\n\r\n    const onGameOver = (data) => {\r\n        let newData = {\r\n            ...data,\r\n            score: data.score ? data.score : userScore\r\n        }\r\n\r\n        props.gameOver(newData);\r\n    }\r\n\r\n    const shuffleArray = (array) => {\r\n        let newArr = [...array];\r\n        for (let i = newArr.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\r\n        }\r\n        return newArr;\r\n    }\r\n\r\n    if(!props.apiUrl) {\r\n        return null;\r\n    }\r\n\r\n    let pageContent = null;\r\n    if(!isLoading) {\r\n        pageContent = (\r\n            <>\r\n                <UserScore score={userScore} />\r\n                <ProgressBar questionNumber={currQuestion + 1} />\r\n                {quizData.length > 0 && currQuestion < quizData.length ? <Question \r\n                    questionNumber={currQuestion+1}\r\n                    questionText={quizData[currQuestion].question}\r\n                    questionChoices={quizData[currQuestion].choices}\r\n                    selected={onSelectedHandler}\r\n                    timeIsUp={onGameOver}\r\n                    success={success}\r\n                    answered={answered}\r\n                    jokerUsed={onJokerUsedHandler}\r\n                    canUseJoker={userJoker > 0} /> : null}\r\n            </>\r\n        );\r\n    }\r\n    else {\r\n        pageContent = <Loader />;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Quiz}>\r\n            {pageContent}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Quiz;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from './Backdrop.module.scss';\r\n\r\nconst Backdrop = (props) => \r\n    ReactDOM.createPortal(\r\n        props.show ? <div className={classes.Backdrop} onClick={props.clicked}/> : null,\r\n        document.getElementById('backdrop-root')\r\n    );\r\n\r\nexport default Backdrop;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport svg from '../../assets/image/sprite.svg';\r\nimport classes from './Modal.module.scss';\r\nimport Backdrop from '../UI/Backdrop/Backdrop';\r\n\r\nconst Modal = (props) => {\r\n    const [modalClasses, setModalClasses] = useState([classes.ModalContainer]); // KEEP IT OR LEAVE IT\r\n\r\n    useEffect(() => {\r\n        setModalClasses([classes.ModalContainer]); // KEEP IT OR LEAVE IT\r\n    }, [props.show]);\r\n\r\n    const closeModalHandler = () => {\r\n        props.closed();\r\n\r\n        setModalClasses([classes.ModalContainer, classes.ModalContainer__Closed]); // KEEP IT OR LEAVE IT\r\n    }\r\n\r\n    return (\r\n        ReactDOM.createPortal(\r\n            props.show ? (\r\n                <div className={modalClasses.join(' ')}>\r\n                    <Backdrop show={props.show} clicked={closeModalHandler} />\r\n                    <div className={classes.Modal}>\r\n                        <div className={classes.ModalClose} onClick={closeModalHandler}></div>\r\n\r\n                        <div className={classes.ModalContent}>\r\n                            <header className={classes.ModalContent__Header}>\r\n                                <h2>{props.header}</h2>\r\n                            </header>\r\n\r\n                            <div className={classes.ModalContent__Text}>\r\n                                <svg className={classes.ModalContent__Text__Icon}>\r\n                                    <use xlinkHref={`${svg}#icon-${props.icon}`}></use>\r\n                                </svg>\r\n                                <span>{props.text}</span>\r\n                            </div>\r\n\r\n                            <div className={classes.ModalContent__Score}>\r\n                                SCORE: {props.score}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>) : null,\r\n            document.getElementById('modal-root')\r\n        )\r\n    );\r\n}  \r\n\r\nexport default Modal;","import React from 'react';\r\n\r\nimport classes from './Char.module.scss';\r\n\r\nconst Char = (props) => {\r\n\r\n    let style = {\r\n        transform: `rotateZ(${(Math.random() > 0.5 ? 1 : -1) * Math.random() * 10}deg)`\r\n    }\r\n\r\n    return (\r\n        <span className={[classes.Char, classes[`Char__${props.number % 7}`]].join(' ')} style={style}>\r\n            {props.letter}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Char;","import React from 'react';\r\n\r\nimport classes from './Title.module.scss';\r\nimport Char from './Char/Char';\r\n\r\nconst Title = React.memo((props) => {\r\n    \r\n    let letterArr = props.title.split('');\r\n    let title = letterArr.map((letter, i) => {\r\n        return <Char key={i} number={i+1} letter={letter} />\r\n    });\r\n    \r\n    return (\r\n        <header className={classes.Title}>\r\n            {title}\r\n        </header>\r\n    )\r\n});\r\n\r\nexport default Title;","import React from 'react';\r\n\r\nimport svg from '../../assets/image/sprite.svg';\r\nimport classes from './Intro.module.scss';\r\n\r\nconst Intro = () => {\r\n    return (\r\n        <div className={classes.Intro}>\r\n            <div className={classes.Intro__Text}>\r\n                <p>\r\n                    A fun trivia game! You can choose your own difficulty &amp; category!\r\n                </p>\r\n                <p>\r\n                    Or not, to make things more interesting!\r\n                </p>\r\n            </div>\r\n            <svg className={classes.Intro__Icon}>\r\n                <use xlinkHref={`${svg}#icon-arrow-down`}></use>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro;","import React, { useState, useEffect, useRef } from 'react';\n\nimport classes from './App.module.scss';\nimport StartQuiz from './containers/StartQuiz/StartQuiz';\nimport Quiz from './containers/Quiz/Quiz';\nimport Modal from './components/Modal/Modal';\nimport Title from './components/Title/Title';\nimport Intro from './components/Intro/Intro';\n\nfunction App() {\n\tconst [apiUrl, setApiUrl] = useState(\"\");\n\tconst [quizStarted, setQuizStarted] = useState(false);\n\tconst [modalConfig, setModalConfig] = useState({\n\t\tshow: false,\n\t\theader: '',\n\t\ttext: '',\n\t\tscore: '',\n\t\ticon: null\n\t});\n\n\tlet timeout = useRef(null);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tclearTimeout(timeout.current);\n\t\t}\n\t}, []);\n\n\tconst onQuizStartedHandler = (url) => {\n\t\tsetApiUrl(apiUrl => url);\n\n\t\tsetQuizStarted(true);\n\t}\n\n\tconst onQuizFinishedHandler = (data) => {\n\t\tsetModalConfig(modalConfig => {\n\t\t\treturn {\n\t\t\t\tshow: true,\n\t\t\t\theader: data.header,\n\t\t\t\ttext: data.text,\n\t\t\t\tscore: data.score,\n\t\t\t\ticon: data.icon\n\t\t\t}\n\t\t});\n\t\t\n\t\tsetQuizStarted(false);\n\t}\n\n\tconst onModalClosedHandler = () => {\n\t\ttimeout.current = setTimeout(() => {\n\t\t\tsetModalConfig(modalConfig => {\n\t\t\t\treturn {\n\t\t\t\t\tshow: false,\n\t\t\t\t\theader: '',\n\t\t\t\t\ttext: '',\n\t\t\t\t\tscore: '',\n\t\t\t\t\ticon: null\n\t\t\t\t}\n\t\t\t});\n\t\t}, 200);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Modal\n\t\t\t\tshow={modalConfig.show}\n\t\t\t\tclosed={onModalClosedHandler}\n\t\t\t\theader={modalConfig.header}\n\t\t\t\ttext={modalConfig.text}\n\t\t\t\tscore={modalConfig.score}\n\t\t\t\ticon={modalConfig.icon}\n\t\t\t/>\n\n\t\t\t<div className={classes.App}>\n\t\t\t\t{quizStarted ? <Quiz apiUrl={apiUrl} gameOver={onQuizFinishedHandler} /> : null}\n\n\t\t\t\t{!quizStarted ? <>\n\t\t\t\t\t<Title title=\"Queasy\" />\n\n\t\t\t\t\t<Intro />\n\n\t\t\t\t\t<StartQuiz quizStarted={onQuizStartedHandler} /> \n\t\t\t\t</> : null}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectInputWrapper\":\"SelectInput_SelectInputWrapper__205xg\",\"SelectInput\":\"SelectInput_SelectInput__Rw6Rl\",\"SelectInput__OptionsShown\":\"SelectInput_SelectInput__OptionsShown__1d80K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timer\":\"Timer_Timer__28oHT\",\"Timer__Icon\":\"Timer_Timer__Icon__zTXeV\",\"pulse\":\"Timer_pulse__2OMNT\",\"Blinking\":\"Timer_Blinking__js72S\",\"blinking\":\"Timer_blinking__1UCO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RadioGroup\":\"RadioButton_RadioGroup__2x_e3\",\"RadioButton\":\"RadioButton_RadioButton__3kheO\",\"RadioButton__Input\":\"RadioButton_RadioButton__Input__1YxJx\",\"RadioButton__Label\":\"RadioButton_RadioButton__Label__134H4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modal_ModalContainer__JssJ1\",\"scaleUp\":\"Modal_scaleUp__1eHkt\",\"ModalContainer__Closed\":\"Modal_ModalContainer__Closed__2EYuk\",\"scaleDown\":\"Modal_scaleDown__kZeXf\",\"Modal\":\"Modal_Modal__3ydQ9\",\"ModalContent\":\"Modal_ModalContent__12EoW\",\"ModalContent__Header\":\"Modal_ModalContent__Header__2qOaS\",\"ModalContent__Text\":\"Modal_ModalContent__Text__1KvRE\",\"ModalContent__Text__Icon\":\"Modal_ModalContent__Text__Icon__UAMd0\",\"ModalContent__Score\":\"Modal_ModalContent__Score__1TciC\",\"ModalClose\":\"Modal_ModalClose__2rWd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProgressBar\":\"ProgressBar_ProgressBar__dgT12\",\"ProgressBar__Background\":\"ProgressBar_ProgressBar__Background__2_q7U\",\"ProgressBar__Foreground\":\"ProgressBar_ProgressBar__Foreground__1Nbjx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Intro\":\"Intro_Intro__2FlXI\",\"Intro__Text\":\"Intro_Intro__Text__1FryC\",\"Intro__Icon\":\"Intro_Intro__Icon__2TUts\",\"upDown\":\"Intro_upDown__30Ip1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StartQuiz\":\"StartQuiz_StartQuiz__3mCTc\",\"StartQuiz__Form\":\"StartQuiz_StartQuiz__Form__31kwq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Char\":\"Char_Char__3bpCU\",\"Char__1\":\"Char_Char__1__1B22o\",\"Char__2\":\"Char_Char__2__2QaX-\",\"Char__3\":\"Char_Char__3__ROsC3\",\"Char__4\":\"Char_Char__4__2kIQ8\",\"Char__5\":\"Char_Char__5__mDLWj\",\"Char__6\":\"Char_Char__6__1h-F6\"};","module.exports = __webpack_public_path__ + \"static/media/sprite.fc5da333.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2jO3L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SelectOptions\":\"Options_SelectOptions__2FE5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Option\":\"Option_Option__J3AvO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1smII\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2b3-y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SuccessCheck\":\"SuccessCheck_SuccessCheck__2rZNG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UserScore\":\"UserScore_UserScore__1WODB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Question\":\"Question_Question__V6Vt7\",\"Question__Joker\":\"Question_Question__Joker__1I3v_\",\"Question__Number\":\"Question_Question__Number__IYzm7\",\"Question__Text\":\"Question_Question__Text__1PkCJ\",\"Question__Choices\":\"Question_Question__Choices__qkgQX\",\"ButtonText\":\"Question_ButtonText__2f_k1\",\"ButtonText__Icon\":\"Question_ButtonText__Icon__1PMgf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__3Stg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__dG2f0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3-nM_\"};"],"sourceRoot":""}